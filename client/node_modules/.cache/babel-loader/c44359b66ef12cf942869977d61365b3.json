{"ast":null,"code":"var _jsxFileName = \"/Users/panchalshubham/web-dev/screen-share-client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Config from './config';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // states\n  const [screenshot, setScreenshot] = useState(null);\n  const [err, setErr] = useState(null);\n  useEffect(() => {\n    // create a socket for the connection\n    const socket = io(Config.ServerUrl);\n\n    // check for connection error\n    socket.on('connect_error', err => {\n      setErr(err);\n    });\n\n    // whenever the server emits 'screenshot', this updates the screenshot\n    socket.on('screenshot', data => {\n      console.log('got screenshot');\n      let bytes = new Uint8Array(data);\n      let blob = new Blob([bytes.buffer]);\n      let reader = new FileReader();\n      reader.onload = e => setScreenshot(e.target.result);\n      reader.readAsDataURL(blob);\n    });\n\n    // whenever the server emits 'screenshot_error', update the errrr message\n    socket.on('screenshot_error', err => {\n      setScreenshot(err);\n      setErr(err);\n    });\n\n    // repeatedly get screenshot from the server\n    let interval = setInterval(() => {\n      if (socket.connected) {\n        socket.emit('screenshot');\n      }\n    }, 500);\n\n    // do cleanup\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.close();\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [screenshot && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: screenshot,\n      alt: \"screenshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Oops! We have encountered an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We have enoutered an error while connection to server. Here are a few things you can try out:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Make sure that you have set the correct server url? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 67\n          }, this), \"You can change the server url by going to \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: \"src/config.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 57\n          }, this), \" and updating the variable \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"highlight\",\n            children: \"ServerUrl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 132\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Make sure that your server is running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Make sure that your server is running on the same network as this client.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Make sure that you have specified the correct port number in the server url.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2U8vAFYsmFfJL5Mucz+B+SY1pGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","io","Config","App","screenshot","setScreenshot","err","setErr","socket","ServerUrl","on","data","console","log","bytes","Uint8Array","blob","Blob","buffer","reader","FileReader","onload","e","target","result","readAsDataURL","interval","setInterval","connected","emit","off","close","clearInterval"],"sources":["/Users/panchalshubham/web-dev/screen-share-client/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Config from './config';\nimport './App.css';\n\nfunction App() {\n\n  // states\n  const [screenshot, setScreenshot] = useState(null);\n  const [err, setErr] = useState(null);\n\n  useEffect(() => {\n\n    // create a socket for the connection\n    const socket = io(Config.ServerUrl);\n\n    // check for connection error\n    socket.on('connect_error', (err) => {\n      setErr(err);\n    });\n\n    // whenever the server emits 'screenshot', this updates the screenshot\n    socket.on('screenshot', data => {\n      console.log('got screenshot')\n      let bytes = new Uint8Array(data);\n      let blob = new Blob([bytes.buffer]);  \n      let reader = new FileReader();\n      reader.onload = e => setScreenshot(e.target.result);\n      reader.readAsDataURL(blob);\n    });\n\n    // whenever the server emits 'screenshot_error', update the errrr message\n    socket.on('screenshot_error', err => {\n      setScreenshot(err);\n      setErr(err);\n    });\n\n    // repeatedly get screenshot from the server\n    let interval = setInterval(() => {\n      if (socket.connected) {\n        socket.emit('screenshot');\n      }\n    }, 500);\n\n    // do cleanup\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.close();\n      clearInterval(interval);\n    };\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {screenshot && <img src={screenshot} alt=\"screenshot\" />}\n      {err && \n        <div className=\"error\">\n          <h1>Oops! We have encountered an error</h1>\n          <hr/>\n          <p>We have enoutered an error while connection to server. Here are a few things you can try out:</p>\n          <ul>\n            <li>\n              Make sure that you have set the correct server url? <br/>\n              You can change the server url by going to <span className='highlight'>src/config.js</span> and updating the variable <span className='highlight'>ServerUrl</span>\n            </li>\n            <li>\n              Make sure that your server is running.\n            </li>\n            <li>\n              Make sure that your server is running on the same network as this client.\n            </li>\n            <li>\n              Make sure that you have specified the correct port number in the server url.\n            </li>\n          </ul>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}